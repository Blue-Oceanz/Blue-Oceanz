stages:
    - format
    - build
    - deploy

check-format:
    stage: format
    image: node:17-alpine3.14
    script: npx prettier . --check

build-images:
    image: docker:19.03.12
    stage: build
    services:
        - docker:dind
    script:
        - docker build -t $CI_REGISTRY/m7093/blue-ocean/front-end:prod ./front-end
        - docker build -t $CI_REGISTRY/m7093/blue-ocean/rest-api:prod ./rest-api
        - docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY
        - docker push $CI_REGISTRY/m7093/blue-ocean/front-end:prod
        - docker push $CI_REGISTRY/m7093/blue-ocean/rest-api:prod
    when: manual

deploy:
    image: alpine:latest
    stage: deploy
    tags:
        - deployment
    script:
        - chmod og= $ID_RSA
        - apk update && apk add openssh-client
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker container rm -f front-end && docker container rm -f rest-api || true"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker pull registry.gitlab.com/m7093/blue-ocean/front-end:prod && docker pull registry.gitlab.com/m7093/blue-ocean/rest-api:prod"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 80:80 --name front-end registry.gitlab.com/m7093/blue-ocean/front-end:prod"
        - ssh -i $ID_RSA -o StrictHostKeyChecking=no $SERVER_USER@$SERVER_IP "docker run -d -p 3001:3001 --name rest-api registry.gitlab.com/m7093/blue-ocean/rest-api:prod"
    when: manual
